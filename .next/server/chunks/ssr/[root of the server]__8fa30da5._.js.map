{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/jose-lopes/pessoais/02-areas/resgatame/frontend/src/hooks/use-toast.ts"],"sourcesContent":["\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n"],"names":[],"mappings":";;;;;AAEA,sCAAsC;AACtC;AAHA;;AAUA,MAAM,cAAc;AACpB,MAAM,qBAAqB;AAS3B,MAAM,cAAc;IAClB,WAAW;IACX,cAAc;IACd,eAAe;IACf,cAAc;AAChB;AAEA,IAAI,QAAQ;AAEZ,SAAS;IACP,QAAQ,CAAC,QAAQ,CAAC,IAAI,OAAO,gBAAgB;IAC7C,OAAO,MAAM,QAAQ;AACvB;AA0BA,MAAM,gBAAgB,IAAI;AAE1B,MAAM,mBAAmB,CAAC;IACxB,IAAI,cAAc,GAAG,CAAC,UAAU;QAC9B;IACF;IAEA,MAAM,UAAU,WAAW;QACzB,cAAc,MAAM,CAAC;QACrB,SAAS;YACP,MAAM;YACN,SAAS;QACX;IACF,GAAG;IAEH,cAAc,GAAG,CAAC,SAAS;AAC7B;AAEO,MAAM,UAAU,CAAC,OAAc;IACpC,OAAQ,OAAO,IAAI;QACjB,KAAK;YACH,OAAO;gBACL,GAAG,KAAK;gBACR,QAAQ;oBAAC,OAAO,KAAK;uBAAK,MAAM,MAAM;iBAAC,CAAC,KAAK,CAAC,GAAG;YACnD;QAEF,KAAK;YACH,OAAO;gBACL,GAAG,KAAK;gBACR,QAAQ,MAAM,MAAM,CAAC,GAAG,CAAC,CAAC,IACxB,EAAE,EAAE,KAAK,OAAO,KAAK,CAAC,EAAE,GAAG;wBAAE,GAAG,CAAC;wBAAE,GAAG,OAAO,KAAK;oBAAC,IAAI;YAE3D;QAEF,KAAK;YAAiB;gBACpB,MAAM,EAAE,OAAO,EAAE,GAAG;gBAEpB,2EAA2E;gBAC3E,uCAAuC;gBACvC,IAAI,SAAS;oBACX,iBAAiB;gBACnB,OAAO;oBACL,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC;wBACpB,iBAAiB,MAAM,EAAE;oBAC3B;gBACF;gBAEA,OAAO;oBACL,GAAG,KAAK;oBACR,QAAQ,MAAM,MAAM,CAAC,GAAG,CAAC,CAAC,IACxB,EAAE,EAAE,KAAK,WAAW,YAAY,YAC5B;4BACE,GAAG,CAAC;4BACJ,MAAM;wBACR,IACA;gBAER;YACF;QACA,KAAK;YACH,IAAI,OAAO,OAAO,KAAK,WAAW;gBAChC,OAAO;oBACL,GAAG,KAAK;oBACR,QAAQ,EAAE;gBACZ;YACF;YACA,OAAO;gBACL,GAAG,KAAK;gBACR,QAAQ,MAAM,MAAM,CAAC,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,OAAO,OAAO;YAC5D;IACJ;AACF;AAEA,MAAM,YAA2C,EAAE;AAEnD,IAAI,cAAqB;IAAE,QAAQ,EAAE;AAAC;AAEtC,SAAS,SAAS,MAAc;IAC9B,cAAc,QAAQ,aAAa;IACnC,UAAU,OAAO,CAAC,CAAC;QACjB,SAAS;IACX;AACF;AAIA,SAAS,MAAM,EAAE,GAAG,OAAc;IAChC,MAAM,KAAK;IAEX,MAAM,SAAS,CAAC,QACd,SAAS;YACP,MAAM;YACN,OAAO;gBAAE,GAAG,KAAK;gBAAE;YAAG;QACxB;IACF,MAAM,UAAU,IAAM,SAAS;YAAE,MAAM;YAAiB,SAAS;QAAG;IAEpE,SAAS;QACP,MAAM;QACN,OAAO;YACL,GAAG,KAAK;YACR;YACA,MAAM;YACN,cAAc,CAAC;gBACb,IAAI,CAAC,MAAM;YACb;QACF;IACF;IAEA,OAAO;QACL,IAAI;QACJ;QACA;IACF;AACF;AAEA,SAAS;IACP,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAS;IAEhD,CAAA,GAAA,qMAAA,CAAA,YAAe,AAAD,EAAE;QACd,UAAU,IAAI,CAAC;QACf,OAAO;YACL,MAAM,QAAQ,UAAU,OAAO,CAAC;YAChC,IAAI,QAAQ,CAAC,GAAG;gBACd,UAAU,MAAM,CAAC,OAAO;YAC1B;QACF;IACF,GAAG;QAAC;KAAM;IAEV,OAAO;QACL,GAAG,KAAK;QACR;QACA,SAAS,CAAC,UAAqB,SAAS;gBAAE,MAAM;gBAAiB;YAAQ;IAC3E;AACF","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///home/jose-lopes/pessoais/02-areas/resgatame/frontend/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file:///home/jose-lopes/pessoais/02-areas/resgatame/frontend/src/components/ui/toast.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,gBAAgB,iKAAA,CAAA,WAAwB;AAE9C,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qIACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,iKAAA,CAAA,WAAwB,CAAC,WAAW;AAEhE,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6lBACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE;IACnC,qBACE,8OAAC,iKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;AACA,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAoB,CAAC,WAAW;AAEpD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,SAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sgBACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,iKAAA,CAAA,SAAsB,CAAC,WAAW;AAE5D,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,yVACA;QAEF,eAAY;QACX,GAAG,KAAK;kBAET,cAAA,8OAAC,4LAAA,CAAA,IAAC;YAAC,WAAU;;;;;;;;;;;AAGjB,WAAW,WAAW,GAAG,iKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG,iKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB;QACnC,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,iKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file:///home/jose-lopes/pessoais/02-areas/resgatame/frontend/src/components/ui/toaster.tsx"],"sourcesContent":["\"use client\"\n\nimport { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAYO,SAAS;IACd,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IAE1B,qBACE,8OAAC,iIAAA,CAAA,gBAAa;;YACX,OAAO,GAAG,CAAC,SAAU,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,OAAO;gBAChE,qBACE,8OAAC,iIAAA,CAAA,QAAK;oBAAW,GAAG,KAAK;;sCACvB,8OAAC;4BAAI,WAAU;;gCACZ,uBAAS,8OAAC,iIAAA,CAAA,aAAU;8CAAE;;;;;;gCACtB,6BACC,8OAAC,iIAAA,CAAA,mBAAgB;8CAAE;;;;;;;;;;;;wBAGtB;sCACD,8OAAC,iIAAA,CAAA,aAAU;;;;;;mBARD;;;;;YAWhB;0BACA,8OAAC,iIAAA,CAAA,gBAAa;;;;;;;;;;;AAGpB","debugId":null}},
    {"offset": {"line": 372, "column": 0}, "map": {"version":3,"sources":["file:///home/jose-lopes/pessoais/02-areas/resgatame/frontend/src/services/api.ts"],"sourcesContent":["// Configuração base da API\n//const API_BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL || \n  //(process.env.NODE_ENV === 'production' ? '/api' : 'http://backend:5000/api');\n\n//const API_BASE_URL = 'https://ogh5izce7v7v.manus.space/api'\nconst API_BASE_URL = 'https://resgatame.kindstone-e3510d40.eastus2.azurecontainerapps.io/api'\n\n// Função auxiliar para fazer requisições\nasync function apiRequest<T>(\n  endpoint: string, \n  options: RequestInit = {}\n): Promise<T> {\n  const url = `${API_BASE_URL}${endpoint}`;\n  \n  const config: RequestInit = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers,\n    },\n    ...options,\n  };\n\n  try {\n    const response = await fetch(url, config);\n    \n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error(`API request failed for ${endpoint}:`, error);\n    throw error;\n  }\n}\n\n// Serviços para Clientes\nexport const customersApi = {\n  getAll: () => apiRequest<any[]>('/customers'),\n  \n  create: (customer: { name: string; phone: string }) =>\n    apiRequest<any>('/customers', {\n      method: 'POST',\n      body: JSON.stringify(customer),\n    }),\n  \n  getById: (id: string) => apiRequest<any>(`/customers/${id}`),\n  \n  update: (id: string, customer: Partial<{ name: string; phone: string }>) =>\n    apiRequest<any>(`/customers/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(customer),\n    }),\n  \n  delete: (id: string) =>\n    apiRequest<{ message: string }>(`/customers/${id}`, {\n      method: 'DELETE',\n    }),\n};\n\n// Serviços para Itens do Menu\nexport const menuItemsApi = {\n  getAll: (activeOnly = true) => \n    apiRequest<any[]>(`/menu-items?active_only=${activeOnly}`),\n  \n  create: (item: { name: string; price: number; category: string }) =>\n    apiRequest<any>('/menu-items', {\n      method: 'POST',\n      body: JSON.stringify(item),\n    }),\n  \n  getById: (id: string) => apiRequest<any>(`/menu-items/${id}`),\n  \n  update: (id: string, item: Partial<{ name: string; price: number; category: string; is_active: boolean }>) =>\n    apiRequest<any>(`/menu-items/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(item),\n    }),\n  \n  delete: (id: string) =>\n    apiRequest<{ message: string }>(`/menu-items/${id}`, {\n      method: 'DELETE',\n    }),\n  \n  getCategories: () => apiRequest<string[]>('/menu-items/categories'),\n};\n\n// Serviços para Anotações\nexport const annotationsApi = {\n  getAll: (status?: string) => {\n    const params = status ? `?status=${status}` : '';\n    return apiRequest<any[]>(`/annotations${params}`);\n  },\n  \n  create: (annotation: { customer_id: string; customer_name: string }) =>\n    apiRequest<any>('/annotations', {\n      method: 'POST',\n      body: JSON.stringify(annotation),\n    }),\n  \n  getById: (id: string) => apiRequest<any>(`/annotations/${id}`),\n  \n  addItem: (annotationId: string, item: { menu_item_id: string; quantity: number }) =>\n    apiRequest<any>(`/annotations/${annotationId}/items`, {\n      method: 'POST',\n      body: JSON.stringify(item),\n    }),\n  \n  close: (annotationId: string, paymentMethod: string) =>\n    apiRequest<{ annotation: any; transaction: any }>(`/annotations/${annotationId}/close`, {\n      method: 'POST',\n      body: JSON.stringify({ payment_method: paymentMethod }),\n    }),\n  \n  delete: (id: string) =>\n    apiRequest<{ message: string }>(`/annotations/${id}`, {\n      method: 'DELETE',\n    }),\n};\n\n// Serviços para Transações/Vendas\nexport const transactionsApi = {\n  getAll: (params?: {\n    start_date?: string;\n    end_date?: string;\n    payment_method?: string;\n    limit?: number;\n  }) => {\n    const searchParams = new URLSearchParams();\n    if (params) {\n      Object.entries(params).forEach(([key, value]) => {\n        if (value !== undefined) {\n          searchParams.append(key, value.toString());\n        }\n      });\n    }\n    const queryString = searchParams.toString();\n    return apiRequest<any[]>(`/transactions${queryString ? `?${queryString}` : ''}`);\n  },\n  \n  create: (transaction: {\n    items: Array<{ menu_item_id: string; quantity: number; unit_price: number }>;\n    total_amount: number;\n    payment_method?: string;\n    annotation_id?: string;\n  }) =>\n    apiRequest<any>('/transactions', {\n      method: 'POST',\n      body: JSON.stringify(transaction),\n    }),\n  \n  getById: (id: string) => apiRequest<any>(`/transactions/${id}`),\n  \n  getDailyStats: () => apiRequest<{\n    date: string;\n    total_revenue: number;\n    total_orders: number;\n    average_order_value: number;\n    payment_methods: Record<string, number>;\n    transactions: any[];\n  }>('/transactions/stats/daily'),\n  \n  getPeriodStats: (startDate: string, endDate: string) =>\n    apiRequest<{\n      start_date: string;\n      end_date: string;\n      total_revenue: number;\n      total_orders: number;\n      average_order_value: number;\n      daily_stats: Record<string, { revenue: number; orders: number }>;\n    }>(`/transactions/stats/period?start_date=${startDate}&end_date=${endDate}`),\n  \n  delete: (id: string) =>\n    apiRequest<{ message: string }>(`/transactions/${id}`, {\n      method: 'DELETE',\n    }),\n};\n\nexport default {\n  customers: customersApi,\n  menuItems: menuItemsApi,\n  annotations: annotationsApi,\n  transactions: transactionsApi,\n};\n\n"],"names":[],"mappings":"AAAA,2BAA2B;AAC3B,+DAA+D;AAC7D,+EAA+E;AAEjF,6DAA6D;;;;;;;;AAC7D,MAAM,eAAe;AAErB,yCAAyC;AACzC,eAAe,WACb,QAAgB,EAChB,UAAuB,CAAC,CAAC;IAEzB,MAAM,MAAM,GAAG,eAAe,UAAU;IAExC,MAAM,SAAsB;QAC1B,SAAS;YACP,gBAAgB;YAChB,GAAG,QAAQ,OAAO;QACpB;QACA,GAAG,OAAO;IACZ;IAEA,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,KAAK;QAElC,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC,CAAC,CAAC;YACvD,MAAM,IAAI,MAAM,UAAU,KAAK,IAAI,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;QAC7E;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,uBAAuB,EAAE,SAAS,CAAC,CAAC,EAAE;QACrD,MAAM;IACR;AACF;AAGO,MAAM,eAAe;IAC1B,QAAQ,IAAM,WAAkB;IAEhC,QAAQ,CAAC,WACP,WAAgB,cAAc;YAC5B,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;QACvB;IAEF,SAAS,CAAC,KAAe,WAAgB,CAAC,WAAW,EAAE,IAAI;IAE3D,QAAQ,CAAC,IAAY,WACnB,WAAgB,CAAC,WAAW,EAAE,IAAI,EAAE;YAClC,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;QACvB;IAEF,QAAQ,CAAC,KACP,WAAgC,CAAC,WAAW,EAAE,IAAI,EAAE;YAClD,QAAQ;QACV;AACJ;AAGO,MAAM,eAAe;IAC1B,QAAQ,CAAC,aAAa,IAAI,GACxB,WAAkB,CAAC,wBAAwB,EAAE,YAAY;IAE3D,QAAQ,CAAC,OACP,WAAgB,eAAe;YAC7B,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;QACvB;IAEF,SAAS,CAAC,KAAe,WAAgB,CAAC,YAAY,EAAE,IAAI;IAE5D,QAAQ,CAAC,IAAY,OACnB,WAAgB,CAAC,YAAY,EAAE,IAAI,EAAE;YACnC,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;QACvB;IAEF,QAAQ,CAAC,KACP,WAAgC,CAAC,YAAY,EAAE,IAAI,EAAE;YACnD,QAAQ;QACV;IAEF,eAAe,IAAM,WAAqB;AAC5C;AAGO,MAAM,iBAAiB;IAC5B,QAAQ,CAAC;QACP,MAAM,SAAS,SAAS,CAAC,QAAQ,EAAE,QAAQ,GAAG;QAC9C,OAAO,WAAkB,CAAC,YAAY,EAAE,QAAQ;IAClD;IAEA,QAAQ,CAAC,aACP,WAAgB,gBAAgB;YAC9B,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;QACvB;IAEF,SAAS,CAAC,KAAe,WAAgB,CAAC,aAAa,EAAE,IAAI;IAE7D,SAAS,CAAC,cAAsB,OAC9B,WAAgB,CAAC,aAAa,EAAE,aAAa,MAAM,CAAC,EAAE;YACpD,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;QACvB;IAEF,OAAO,CAAC,cAAsB,gBAC5B,WAAkD,CAAC,aAAa,EAAE,aAAa,MAAM,CAAC,EAAE;YACtF,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;gBAAE,gBAAgB;YAAc;QACvD;IAEF,QAAQ,CAAC,KACP,WAAgC,CAAC,aAAa,EAAE,IAAI,EAAE;YACpD,QAAQ;QACV;AACJ;AAGO,MAAM,kBAAkB;IAC7B,QAAQ,CAAC;QAMP,MAAM,eAAe,IAAI;QACzB,IAAI,QAAQ;YACV,OAAO,OAAO,CAAC,QAAQ,OAAO,CAAC,CAAC,CAAC,KAAK,MAAM;gBAC1C,IAAI,UAAU,WAAW;oBACvB,aAAa,MAAM,CAAC,KAAK,MAAM,QAAQ;gBACzC;YACF;QACF;QACA,MAAM,cAAc,aAAa,QAAQ;QACzC,OAAO,WAAkB,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC,EAAE,aAAa,GAAG,IAAI;IACjF;IAEA,QAAQ,CAAC,cAMP,WAAgB,iBAAiB;YAC/B,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;QACvB;IAEF,SAAS,CAAC,KAAe,WAAgB,CAAC,cAAc,EAAE,IAAI;IAE9D,eAAe,IAAM,WAOlB;IAEH,gBAAgB,CAAC,WAAmB,UAClC,WAOG,CAAC,sCAAsC,EAAE,UAAU,UAAU,EAAE,SAAS;IAE7E,QAAQ,CAAC,KACP,WAAgC,CAAC,cAAc,EAAE,IAAI,EAAE;YACrD,QAAQ;QACV;AACJ;uCAEe;IACb,WAAW;IACX,WAAW;IACX,aAAa;IACb,cAAc;AAChB","debugId":null}},
    {"offset": {"line": 497, "column": 0}, "map": {"version":3,"sources":["file:///home/jose-lopes/pessoais/02-areas/resgatame/frontend/src/contexts/MenuContext.tsx"],"sourcesContent":["\n\"use client\";\n\nimport type { MenuItem } from '@/types';\nimport { menuItemsApi } from '@/services/api';\nimport React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\n\ninterface MenuContextType {\n  menuItems: MenuItem[];\n  addMenuItem: (item: Omit<MenuItem, 'id'>) => Promise<void>;\n  removeMenuItem: (itemId: string) => Promise<void>;\n  loading: boolean;\n  error: string | null;\n  refreshMenuItems: () => Promise<void>;\n}\n\nconst MenuContext = createContext<MenuContextType | undefined>(undefined);\n\nexport const MenuProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [menuItems, setMenuItems] = useState<MenuItem[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const refreshMenuItems = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await menuItemsApi.getAll();\n      setMenuItems(data);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro ao carregar itens do menu');\n      console.error('Erro ao carregar itens do menu:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const addMenuItem = useCallback(async (item: Omit<MenuItem, 'id'>) => {\n    try {\n      setError(null);\n      const newItem = await menuItemsApi.create(item);\n      setMenuItems(prevItems => [...prevItems, newItem]);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro ao criar item do menu');\n      throw err;\n    }\n  }, []);\n\n  const removeMenuItem = useCallback(async (itemId: string) => {\n    try {\n      setError(null);\n      await menuItemsApi.delete(itemId);\n      setMenuItems(prevItems => prevItems.filter(item => item.id !== itemId));\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro ao remover item do menu');\n      throw err;\n    }\n  }, []);\n\n  // Carregar itens do menu na inicialização\n  useEffect(() => {\n    refreshMenuItems();\n  }, [refreshMenuItems]);\n\n  return (\n    <MenuContext.Provider value={{ \n      menuItems, \n      addMenuItem, \n      removeMenuItem, \n      loading, \n      error, \n      refreshMenuItems \n    }}>\n      {children}\n    </MenuContext.Provider>\n  );\n};\n\nexport const useMenu = (): MenuContextType => {\n  const context = useContext(MenuContext);\n  if (!context) {\n    throw new Error('useMenu must be used within a MenuProvider');\n  }\n  return context;\n};\n"],"names":[],"mappings":";;;;;AAIA;AACA;AAJA;;;;AAeA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,MAAM,eAAwD,CAAC,EAAE,QAAQ,EAAE;IAChF,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IACzD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACnC,IAAI;YACF,WAAW;YACX,SAAS;YACT,MAAM,OAAO,MAAM,sHAAA,CAAA,eAAY,CAAC,MAAM;YACtC,aAAa;QACf,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;YAC9C,QAAQ,KAAK,CAAC,mCAAmC;QACnD,SAAU;YACR,WAAW;QACb;IACF,GAAG,EAAE;IAEL,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,OAAO;QACrC,IAAI;YACF,SAAS;YACT,MAAM,UAAU,MAAM,sHAAA,CAAA,eAAY,CAAC,MAAM,CAAC;YAC1C,aAAa,CAAA,YAAa;uBAAI;oBAAW;iBAAQ;QACnD,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;YAC9C,MAAM;QACR;IACF,GAAG,EAAE;IAEL,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,OAAO;QACxC,IAAI;YACF,SAAS;YACT,MAAM,sHAAA,CAAA,eAAY,CAAC,MAAM,CAAC;YAC1B,aAAa,CAAA,YAAa,UAAU,MAAM,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK;QACjE,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;YAC9C,MAAM;QACR;IACF,GAAG,EAAE;IAEL,0CAA0C;IAC1C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG;QAAC;KAAiB;IAErB,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAC3B;YACA;YACA;YACA;YACA;YACA;QACF;kBACG;;;;;;AAGP;AAEO,MAAM,UAAU;IACrB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 584, "column": 0}, "map": {"version":3,"sources":["file:///home/jose-lopes/pessoais/02-areas/resgatame/frontend/src/contexts/SalesContext.tsx"],"sourcesContent":["\"use client\";\n\nimport type { Transaction, OrderItem } from '@/types';\nimport { transactionsApi } from '@/services/api';\nimport React, { createContext, useContext, useState, useCallback, useMemo, useEffect } from 'react';\n\ninterface SalesContextType {\n  transactions: Transaction[];\n  addTransaction: (data: Omit<Transaction, 'id' | 'timestamp'>) => Promise<void>;\n  dailyRevenue: number;\n  totalOrdersToday: number;\n  averageOrderValueToday: number;\n  loading: boolean;\n  error: string | null;\n  refreshTransactions: () => Promise<void>;\n  refreshDailyStats: () => Promise<void>;\n}\n\nconst SalesContext = createContext<SalesContextType | undefined>(undefined);\n\nexport const SalesProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [dailyStats, setDailyStats] = useState({\n    dailyRevenue: 0,\n    totalOrdersToday: 0,\n    averageOrderValueToday: 0\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const refreshTransactions = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await transactionsApi.getAll({ limit: 100 });\n      \n      // Converter dados da API para objetos Transaction\n      const convertedTransactions: Transaction[] = data.map(apiTransaction => ({\n        id: apiTransaction.id,\n        timestamp: new Date(apiTransaction.timestamp),\n        items: apiTransaction.items?.map((item: any) => ({\n          menuItem: {\n            id: item.menu_item.id,\n            name: item.menu_item.name,\n            price: item.unit_price,\n            category: item.menu_item.category\n          },\n          quantity: item.quantity,\n          get totalPrice() {\n            return this.menuItem.price * this.quantity;\n          }\n        })) || [],\n        totalAmount: apiTransaction.total_amount,\n        annotationId: apiTransaction.annotation_id,\n        paymentMethod: apiTransaction.payment_method\n      }));\n      \n      setTransactions(convertedTransactions);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro ao carregar transações');\n      console.error('Erro ao carregar transações:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const refreshDailyStats = useCallback(async () => {\n    try {\n      const stats = await transactionsApi.getDailyStats();\n      setDailyStats({\n        dailyRevenue: stats.total_revenue,\n        totalOrdersToday: stats.total_orders,\n        averageOrderValueToday: stats.average_order_value\n      });\n    } catch (err) {\n      console.error('Erro ao carregar estatísticas diárias:', err);\n    }\n  }, []);\n\n  const addTransaction = useCallback(async (data: Omit<Transaction, 'id' | 'timestamp'>) => {\n    try {\n      setError(null);\n      \n      // Preparar dados para a API\n      const transactionData = {\n        items: data.items.map(item => ({\n          menu_item_id: item.menuItem.id,\n          quantity: item.quantity,\n          unit_price: item.menuItem.price\n        })),\n        total_amount: data.totalAmount,\n        payment_method: data.paymentMethod,\n        annotation_id: data.annotationId\n      };\n      \n      const newApiTransaction = await transactionsApi.create(transactionData);\n      \n      // Converter para objeto Transaction local\n      const newTransaction: Transaction = {\n        id: newApiTransaction.id,\n        timestamp: new Date(newApiTransaction.timestamp),\n        items: data.items,\n        totalAmount: data.totalAmount,\n        annotationId: data.annotationId,\n        paymentMethod: data.paymentMethod\n      };\n      \n      setTransactions(prevTxns => [newTransaction, ...prevTxns]);\n      \n      // Atualizar estatísticas diárias\n      await refreshDailyStats();\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro ao criar transação');\n      throw err;\n    }\n  }, [refreshDailyStats]);\n\n  // Carregar dados na inicialização\n  useEffect(() => {\n    Promise.all([\n      refreshTransactions(),\n      refreshDailyStats()\n    ]);\n  }, [refreshTransactions, refreshDailyStats]);\n\n  return (\n    <SalesContext.Provider value={{ \n      transactions, \n      addTransaction, \n      dailyRevenue: dailyStats.dailyRevenue,\n      totalOrdersToday: dailyStats.totalOrdersToday,\n      averageOrderValueToday: dailyStats.averageOrderValueToday,\n      loading,\n      error,\n      refreshTransactions,\n      refreshDailyStats\n    }}>\n      {children}\n    </SalesContext.Provider>\n  );\n};\n\nexport const useSales = (): SalesContextType => {\n  const context = useContext(SalesContext);\n  if (!context) {\n    throw new Error('useSales must be used within a SalesProvider');\n  }\n  return context;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 731, "column": 0}, "map": {"version":3,"sources":["file:///home/jose-lopes/pessoais/02-areas/resgatame/frontend/src/types/index.ts"],"sourcesContent":["\nexport interface Customer {\n  id: string;\n  name: string;\n  phone: string;\n}\n\nexport interface MenuItem {\n  id: string;\n  name: string;\n  price: number;\n  category: string;\n}\n\nexport interface OrderItem {\n  menuItem: MenuItem;\n  quantity: number;\n  get totalPrice(): number;\n}\n\nexport class ConcreteOrderItem implements OrderItem {\n  constructor(public menuItem: MenuItem, public quantity: number) {}\n\n  get totalPrice(): number {\n    return this.menuItem.price * this.quantity;\n  }\n}\n\nexport interface Annotation {\n  id: string;\n  customerName: string;\n  customerId: string;\n  items: OrderItem[];\n  createdAt: Date;\n  closedAt?: Date;\n  status: 'open' | 'closed' | 'paid';\n  get totalAmount(): number;\n}\n\nexport class ConcreteAnnotation implements Annotation {\n  public items: OrderItem[] = [];\n  public status: 'open' | 'closed' | 'paid' = 'open';\n  public createdAt: Date = new Date();\n  public closedAt?: Date;\n\n  constructor(public id: string, public customerId: string, public customerName: string) {}\n  \n  get totalAmount(): number {\n    return this.items.reduce((sum, item) => sum + item.totalPrice, 0);\n  }\n}\n\n\nexport interface Transaction {\n  id: string;\n  timestamp: Date;\n  items: OrderItem[];\n  totalAmount: number;\n  annotationId?: string; // Optional: if the sale originated from an annotation\n  paymentMethod?: string; // e.g., 'cash', 'card'\n}\n\n\nexport interface CustomerTab {\n  id: string;\n  name: string;\n  items: OrderItem[];\n  createdAt: Date;\n  status: 'open' | 'closed' | 'paid';\n  get totalAmount(): number;\n}\n\nexport class ConcreteCustomerTab implements CustomerTab {\n  public items: OrderItem[] = [];\n  public createdAt: Date = new Date();\n  public status: 'open' | 'closed' | 'paid' = 'open';\n\n  constructor(public id: string, public name: string) {}\n\n  get totalAmount(): number {\n    return this.items.reduce((sum, item) => sum + item.totalPrice, 0);\n  }\n}\n\n\n"],"names":[],"mappings":";;;;;AAoBO,MAAM;;;IACX,YAAY,AAAO,QAAkB,EAAE,AAAO,QAAgB,CAAE;aAA7C,WAAA;aAA2B,WAAA;IAAmB;IAEjE,IAAI,aAAqB;QACvB,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ;IAC5C;AACF;AAaO,MAAM;;;;IACJ,MAAwB;IACxB,OAA4C;IAC5C,UAA6B;IAC7B,SAAgB;IAEvB,YAAY,AAAO,EAAU,EAAE,AAAO,UAAkB,EAAE,AAAO,YAAoB,CAAE;aAApE,KAAA;aAAmB,aAAA;aAA2B,eAAA;aAL1D,QAAqB,EAAE;aACvB,SAAqC;aACrC,YAAkB,IAAI;IAG2D;IAExF,IAAI,cAAsB;QACxB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,UAAU,EAAE;IACjE;AACF;AAsBO,MAAM;;;IACJ,MAAwB;IACxB,UAA6B;IAC7B,OAA4C;IAEnD,YAAY,AAAO,EAAU,EAAE,AAAO,IAAY,CAAE;aAAjC,KAAA;aAAmB,OAAA;aAJ/B,QAAqB,EAAE;aACvB,YAAkB,IAAI;aACtB,SAAqC;IAES;IAErD,IAAI,cAAsB;QACxB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,UAAU,EAAE;IACjE;AACF","debugId":null}},
    {"offset": {"line": 790, "column": 0}, "map": {"version":3,"sources":["file:///home/jose-lopes/pessoais/02-areas/resgatame/frontend/src/contexts/AnnotationsContext.tsx"],"sourcesContent":["\n\"use client\";\n\nimport type { Annotation, OrderItem, MenuItem, Customer } from '@/types';\nimport { ConcreteAnnotation, ConcreteOrderItem } from '@/types';\nimport { annotationsApi } from '@/services/api';\nimport React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\nimport { useSales } from './SalesContext';\n\ninterface AnnotationsContextType {\n  annotations: Annotation[];\n  addAnnotation: (customer: Pick<Customer, 'id' | 'name'>) => Promise<Annotation>;\n  addItemToAnnotation: (annotationId: string, menuItem: MenuItem, quantity: number) => Promise<void>;\n  closeAnnotation: (annotationId: string, paymentMethod: string) => Promise<void>;\n  getAnnotationById: (annotationId: string) => Annotation | undefined;\n  loading: boolean;\n  error: string | null;\n  refreshAnnotations: () => Promise<void>;\n}\n\nconst AnnotationsContext = createContext<AnnotationsContextType | undefined>(undefined);\n\nexport const AnnotationsProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [annotations, setAnnotations] = useState<Annotation[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const { addTransaction } = useSales();\n\n  const refreshAnnotations = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await annotationsApi.getAll();\n      \n      // Converter dados da API para objetos ConcreteAnnotation\n      const convertedAnnotations = data.map(apiAnnotation => {\n        const annotation = new ConcreteAnnotation(\n          apiAnnotation.id,\n          apiAnnotation.customer_id,\n          apiAnnotation.customer_name\n        );\n        \n        annotation.status = apiAnnotation.status;\n        annotation.createdAt = new Date(apiAnnotation.created_at);\n        if (apiAnnotation.closed_at) {\n          annotation.closedAt = new Date(apiAnnotation.closed_at);\n        }\n        \n        // Converter itens\n        annotation.items = apiAnnotation.items?.map((item: any) => \n          new ConcreteOrderItem(\n            {\n              id: item.menu_item.id,\n              name: item.menu_item.name,\n              price: item.unit_price,\n              category: item.menu_item.category\n            },\n            item.quantity\n          )\n        ) || [];\n        \n        return annotation;\n      });\n      \n      setAnnotations(convertedAnnotations);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro ao carregar anotações');\n      console.error('Erro ao carregar anotações:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const addAnnotation = useCallback(async (customer: Pick<Customer, 'id' | 'name'>): Promise<Annotation> => {\n    try {\n      setError(null);\n      const apiAnnotation = await annotationsApi.create({\n        customer_id: customer.id,\n        customer_name: customer.name\n      });\n      \n      const newAnnotation = new ConcreteAnnotation(\n        apiAnnotation.id,\n        apiAnnotation.customer_id,\n        apiAnnotation.customer_name\n      );\n      newAnnotation.status = apiAnnotation.status;\n      newAnnotation.createdAt = new Date(apiAnnotation.created_at);\n      \n      setAnnotations(prevAnnotations => [...prevAnnotations, newAnnotation]);\n      return newAnnotation;\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro ao criar anotação');\n      throw err;\n    }\n  }, []);\n\n  const addItemToAnnotation = useCallback(async (annotationId: string, menuItem: MenuItem, quantity: number) => {\n    try {\n      setError(null);\n      const updatedApiAnnotation = await annotationsApi.addItem(annotationId, {\n        menu_item_id: menuItem.id,\n        quantity\n      });\n      \n      // Atualizar a anotação local com os dados da API\n      setAnnotations(prevAnnotations =>\n        prevAnnotations.map(annotation => {\n          if (annotation.id === annotationId) {\n            const updatedAnnotation = new ConcreteAnnotation(\n              updatedApiAnnotation.id,\n              updatedApiAnnotation.customer_id,\n              updatedApiAnnotation.customer_name\n            );\n            \n            updatedAnnotation.status = updatedApiAnnotation.status;\n            updatedAnnotation.createdAt = new Date(updatedApiAnnotation.created_at);\n            if (updatedApiAnnotation.closed_at) {\n              updatedAnnotation.closedAt = new Date(updatedApiAnnotation.closed_at);\n            }\n            \n            updatedAnnotation.items = updatedApiAnnotation.items?.map((item: any) => \n              new ConcreteOrderItem(\n                {\n                  id: item.menu_item.id,\n                  name: item.menu_item.name,\n                  price: item.unit_price,\n                  category: item.menu_item.category\n                },\n                item.quantity\n              )\n            ) || [];\n            \n            return updatedAnnotation;\n          }\n          return annotation;\n        })\n      );\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro ao adicionar item à anotação');\n      throw err;\n    }\n  }, []);\n\n  const closeAnnotation = useCallback(async (annotationId: string, paymentMethod: string) => {\n    try {\n      setError(null);\n      const result = await annotationsApi.close(annotationId, paymentMethod);\n      \n      // Atualizar a anotação local\n      setAnnotations(prevAnnotations =>\n        prevAnnotations.map(annotation => {\n          if (annotation.id === annotationId) {\n            const updatedAnnotation = new ConcreteAnnotation(\n              result.annotation.id,\n              result.annotation.customer_id,\n              result.annotation.customer_name\n            );\n            \n            updatedAnnotation.status = result.annotation.status;\n            updatedAnnotation.createdAt = new Date(result.annotation.created_at);\n            updatedAnnotation.closedAt = new Date(result.annotation.closed_at);\n            updatedAnnotation.items = annotation.items; // Manter os itens existentes\n            \n            return updatedAnnotation;\n          }\n          return annotation;\n        })\n      );\n      \n      // Adicionar transação ao contexto de vendas\n      if (result.transaction) {\n        const annotationToClose = annotations.find(a => a.id === annotationId);\n        if (annotationToClose) {\n          addTransaction({\n            items: annotationToClose.items,\n            totalAmount: annotationToClose.totalAmount,\n            annotationId: annotationToClose.id,\n            paymentMethod: paymentMethod,\n          });\n        }\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro ao fechar anotação');\n      throw err;\n    }\n  }, [annotations, addTransaction]);\n  \n  const getAnnotationById = useCallback((annotationId: string) => {\n    return annotations.find(annotation => annotation.id === annotationId);\n  }, [annotations]);\n\n  // Carregar anotações na inicialização\n  useEffect(() => {\n    refreshAnnotations();\n  }, [refreshAnnotations]);\n\n  return (\n    <AnnotationsContext.Provider value={{ \n      annotations, \n      addAnnotation, \n      addItemToAnnotation, \n      closeAnnotation, \n      getAnnotationById,\n      loading,\n      error,\n      refreshAnnotations\n    }}>\n      {children}\n    </AnnotationsContext.Provider>\n  );\n};\n\nexport const useAnnotations = (): AnnotationsContextType => {\n  const context = useContext(AnnotationsContext);\n  if (!context) {\n    throw new Error('useAnnotations must be used within an AnnotationsProvider');\n  }\n  return context;\n};\n"],"names":[],"mappings":";;;;;AAIA;AACA;AACA;AACA;AANA;;;;;;AAmBA,MAAM,mCAAqB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAsC;AAEtE,MAAM,sBAA+D,CAAC,EAAE,QAAQ,EAAE;IACvF,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IAC/D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,EAAE,cAAc,EAAE,GAAG,CAAA,GAAA,gIAAA,CAAA,WAAQ,AAAD;IAElC,MAAM,qBAAqB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACrC,IAAI;YACF,WAAW;YACX,SAAS;YACT,MAAM,OAAO,MAAM,sHAAA,CAAA,iBAAc,CAAC,MAAM;YAExC,yDAAyD;YACzD,MAAM,uBAAuB,KAAK,GAAG,CAAC,CAAA;gBACpC,MAAM,aAAa,IAAI,qHAAA,CAAA,qBAAkB,CACvC,cAAc,EAAE,EAChB,cAAc,WAAW,EACzB,cAAc,aAAa;gBAG7B,WAAW,MAAM,GAAG,cAAc,MAAM;gBACxC,WAAW,SAAS,GAAG,IAAI,KAAK,cAAc,UAAU;gBACxD,IAAI,cAAc,SAAS,EAAE;oBAC3B,WAAW,QAAQ,GAAG,IAAI,KAAK,cAAc,SAAS;gBACxD;gBAEA,kBAAkB;gBAClB,WAAW,KAAK,GAAG,cAAc,KAAK,EAAE,IAAI,CAAC,OAC3C,IAAI,qHAAA,CAAA,oBAAiB,CACnB;wBACE,IAAI,KAAK,SAAS,CAAC,EAAE;wBACrB,MAAM,KAAK,SAAS,CAAC,IAAI;wBACzB,OAAO,KAAK,UAAU;wBACtB,UAAU,KAAK,SAAS,CAAC,QAAQ;oBACnC,GACA,KAAK,QAAQ,MAEZ,EAAE;gBAEP,OAAO;YACT;YAEA,eAAe;QACjB,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;YAC9C,QAAQ,KAAK,CAAC,+BAA+B;QAC/C,SAAU;YACR,WAAW;QACb;IACF,GAAG,EAAE;IAEL,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,OAAO;QACvC,IAAI;YACF,SAAS;YACT,MAAM,gBAAgB,MAAM,sHAAA,CAAA,iBAAc,CAAC,MAAM,CAAC;gBAChD,aAAa,SAAS,EAAE;gBACxB,eAAe,SAAS,IAAI;YAC9B;YAEA,MAAM,gBAAgB,IAAI,qHAAA,CAAA,qBAAkB,CAC1C,cAAc,EAAE,EAChB,cAAc,WAAW,EACzB,cAAc,aAAa;YAE7B,cAAc,MAAM,GAAG,cAAc,MAAM;YAC3C,cAAc,SAAS,GAAG,IAAI,KAAK,cAAc,UAAU;YAE3D,eAAe,CAAA,kBAAmB;uBAAI;oBAAiB;iBAAc;YACrE,OAAO;QACT,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;YAC9C,MAAM;QACR;IACF,GAAG,EAAE;IAEL,MAAM,sBAAsB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,OAAO,cAAsB,UAAoB;QACvF,IAAI;YACF,SAAS;YACT,MAAM,uBAAuB,MAAM,sHAAA,CAAA,iBAAc,CAAC,OAAO,CAAC,cAAc;gBACtE,cAAc,SAAS,EAAE;gBACzB;YACF;YAEA,iDAAiD;YACjD,eAAe,CAAA,kBACb,gBAAgB,GAAG,CAAC,CAAA;oBAClB,IAAI,WAAW,EAAE,KAAK,cAAc;wBAClC,MAAM,oBAAoB,IAAI,qHAAA,CAAA,qBAAkB,CAC9C,qBAAqB,EAAE,EACvB,qBAAqB,WAAW,EAChC,qBAAqB,aAAa;wBAGpC,kBAAkB,MAAM,GAAG,qBAAqB,MAAM;wBACtD,kBAAkB,SAAS,GAAG,IAAI,KAAK,qBAAqB,UAAU;wBACtE,IAAI,qBAAqB,SAAS,EAAE;4BAClC,kBAAkB,QAAQ,GAAG,IAAI,KAAK,qBAAqB,SAAS;wBACtE;wBAEA,kBAAkB,KAAK,GAAG,qBAAqB,KAAK,EAAE,IAAI,CAAC,OACzD,IAAI,qHAAA,CAAA,oBAAiB,CACnB;gCACE,IAAI,KAAK,SAAS,CAAC,EAAE;gCACrB,MAAM,KAAK,SAAS,CAAC,IAAI;gCACzB,OAAO,KAAK,UAAU;gCACtB,UAAU,KAAK,SAAS,CAAC,QAAQ;4BACnC,GACA,KAAK,QAAQ,MAEZ,EAAE;wBAEP,OAAO;oBACT;oBACA,OAAO;gBACT;QAEJ,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;YAC9C,MAAM;QACR;IACF,GAAG,EAAE;IAEL,MAAM,kBAAkB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,OAAO,cAAsB;QAC/D,IAAI;YACF,SAAS;YACT,MAAM,SAAS,MAAM,sHAAA,CAAA,iBAAc,CAAC,KAAK,CAAC,cAAc;YAExD,6BAA6B;YAC7B,eAAe,CAAA,kBACb,gBAAgB,GAAG,CAAC,CAAA;oBAClB,IAAI,WAAW,EAAE,KAAK,cAAc;wBAClC,MAAM,oBAAoB,IAAI,qHAAA,CAAA,qBAAkB,CAC9C,OAAO,UAAU,CAAC,EAAE,EACpB,OAAO,UAAU,CAAC,WAAW,EAC7B,OAAO,UAAU,CAAC,aAAa;wBAGjC,kBAAkB,MAAM,GAAG,OAAO,UAAU,CAAC,MAAM;wBACnD,kBAAkB,SAAS,GAAG,IAAI,KAAK,OAAO,UAAU,CAAC,UAAU;wBACnE,kBAAkB,QAAQ,GAAG,IAAI,KAAK,OAAO,UAAU,CAAC,SAAS;wBACjE,kBAAkB,KAAK,GAAG,WAAW,KAAK,EAAE,6BAA6B;wBAEzE,OAAO;oBACT;oBACA,OAAO;gBACT;YAGF,4CAA4C;YAC5C,IAAI,OAAO,WAAW,EAAE;gBACtB,MAAM,oBAAoB,YAAY,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;gBACzD,IAAI,mBAAmB;oBACrB,eAAe;wBACb,OAAO,kBAAkB,KAAK;wBAC9B,aAAa,kBAAkB,WAAW;wBAC1C,cAAc,kBAAkB,EAAE;wBAClC,eAAe;oBACjB;gBACF;YACF;QACF,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;YAC9C,MAAM;QACR;IACF,GAAG;QAAC;QAAa;KAAe;IAEhC,MAAM,oBAAoB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QACrC,OAAO,YAAY,IAAI,CAAC,CAAA,aAAc,WAAW,EAAE,KAAK;IAC1D,GAAG;QAAC;KAAY;IAEhB,sCAAsC;IACtC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG;QAAC;KAAmB;IAEvB,qBACE,8OAAC,mBAAmB,QAAQ;QAAC,OAAO;YAClC;YACA;YACA;YACA;YACA;YACA;YACA;YACA;QACF;kBACG;;;;;;AAGP;AAEO,MAAM,iBAAiB;IAC5B,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 970, "column": 0}, "map": {"version":3,"sources":["file:///home/jose-lopes/pessoais/02-areas/resgatame/frontend/src/contexts/CustomersContext.tsx"],"sourcesContent":["\n\"use client\";\n\nimport type { Customer } from '@/types';\nimport { customersApi } from '@/services/api';\nimport React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\n\ninterface CustomersContextType {\n  customers: Customer[];\n  addCustomer: (customer: Omit<Customer, 'id'>) => Promise<void>;\n  removeCustomer: (customerId: string) => Promise<void>;\n  loading: boolean;\n  error: string | null;\n  refreshCustomers: () => Promise<void>;\n}\n\nconst CustomersContext = createContext<CustomersContextType | undefined>(undefined);\n\nexport const CustomersProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [customers, setCustomers] = useState<Customer[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const refreshCustomers = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await customersApi.getAll();\n      setCustomers(data);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro ao carregar clientes');\n      console.error('Erro ao carregar clientes:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const addCustomer = useCallback(async (customerData: Omit<Customer, 'id'>) => {\n    try {\n      setError(null);\n      const newCustomer = await customersApi.create(customerData);\n      setCustomers(prevCustomers => [...prevCustomers, newCustomer]);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro ao criar cliente');\n      throw err;\n    }\n  }, []);\n\n  const removeCustomer = useCallback(async (customerId: string) => {\n    try {\n      setError(null);\n      await customersApi.delete(customerId);\n      setCustomers(prevCustomers => prevCustomers.filter(customer => customer.id !== customerId));\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Erro ao remover cliente');\n      throw err;\n    }\n  }, []);\n\n  // Carregar clientes na inicialização\n  useEffect(() => {\n    refreshCustomers();\n  }, [refreshCustomers]);\n\n  return (\n    <CustomersContext.Provider value={{ \n      customers, \n      addCustomer, \n      removeCustomer, \n      loading, \n      error, \n      refreshCustomers \n    }}>\n      {children}\n    </CustomersContext.Provider>\n  );\n};\n\nexport const useCustomers = (): CustomersContextType => {\n  const context = useContext(CustomersContext);\n  if (!context) {\n    throw new Error('useCustomers must be used within a CustomersProvider');\n  }\n  return context;\n};\n"],"names":[],"mappings":";;;;;AAIA;AACA;AAJA;;;;AAeA,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAoC;AAElE,MAAM,oBAA6D,CAAC,EAAE,QAAQ,EAAE;IACrF,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IACzD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACnC,IAAI;YACF,WAAW;YACX,SAAS;YACT,MAAM,OAAO,MAAM,sHAAA,CAAA,eAAY,CAAC,MAAM;YACtC,aAAa;QACf,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;YAC9C,QAAQ,KAAK,CAAC,8BAA8B;QAC9C,SAAU;YACR,WAAW;QACb;IACF,GAAG,EAAE;IAEL,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,OAAO;QACrC,IAAI;YACF,SAAS;YACT,MAAM,cAAc,MAAM,sHAAA,CAAA,eAAY,CAAC,MAAM,CAAC;YAC9C,aAAa,CAAA,gBAAiB;uBAAI;oBAAe;iBAAY;QAC/D,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;YAC9C,MAAM;QACR;IACF,GAAG,EAAE;IAEL,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,OAAO;QACxC,IAAI;YACF,SAAS;YACT,MAAM,sHAAA,CAAA,eAAY,CAAC,MAAM,CAAC;YAC1B,aAAa,CAAA,gBAAiB,cAAc,MAAM,CAAC,CAAA,WAAY,SAAS,EAAE,KAAK;QACjF,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;YAC9C,MAAM;QACR;IACF,GAAG,EAAE;IAEL,qCAAqC;IACrC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG;QAAC;KAAiB;IAErB,qBACE,8OAAC,iBAAiB,QAAQ;QAAC,OAAO;YAChC;YACA;YACA;YACA;YACA;YACA;QACF;kBACG;;;;;;AAGP;AAEO,MAAM,eAAe;IAC1B,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 1057, "column": 0}, "map": {"version":3,"sources":["file:///home/jose-lopes/pessoais/02-areas/resgatame/frontend/src/contexts/TabsContext.tsx"],"sourcesContent":["\"use client\";\n\nimport type { CustomerTab, OrderItem, MenuItem } from '@/types';\nimport { ConcreteCustomerTab, ConcreteOrderItem } from '@/types';\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport { useSales } from './SalesContext'; // Assuming SalesContext exists for recording transactions\n\ninterface TabsContextType {\n  tabs: CustomerTab[];\n  addTab: (name: string) => CustomerTab;\n  addItemToTab: (tabId: string, menuItem: MenuItem, quantity: number) => void;\n  closeTab: (tabId: string, paymentMethod: string) => void;\n  getTabById: (tabId: string) => CustomerTab | undefined;\n}\n\nconst TabsContext = createContext<TabsContextType | undefined>(undefined);\n\nexport const TabsProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [tabs, setTabs] = useState<CustomerTab[]>([]);\n  const { addTransaction } = useSales();\n\n  const addTab = useCallback((name: string): CustomerTab => {\n    const newTab = new ConcreteCustomerTab(`tab-${Date.now()}-${Math.random().toString(36).substring(2, 7)}`, name);\n    setTabs(prevTabs => [...prevTabs, newTab]);\n    return newTab;\n  }, []);\n\n  const addItemToTab = useCallback((tabId: string, menuItem: MenuItem, quantity: number) => {\n    setTabs(prevTabs =>\n      prevTabs.map(tab => {\n        if (tab.id === tabId && tab.status === 'open') {\n          const existingItemIndex = tab.items.findIndex(item => item.menuItem.id === menuItem.id);\n          let newItems: OrderItem[];\n          if (existingItemIndex > -1) {\n            newItems = tab.items.map((item, index) => \n              index === existingItemIndex \n                ? new ConcreteOrderItem(menuItem, item.quantity + quantity) \n                : item\n            );\n          } else {\n            newItems = [...tab.items, new ConcreteOrderItem(menuItem, quantity)];\n          }\n          // Create a new tab instance to ensure reactivity if ConcreteCustomerTab methods depend on immutability\n          const updatedTab = new ConcreteCustomerTab(tab.id, tab.name);\n          updatedTab.items = newItems;\n          updatedTab.status = tab.status;\n          updatedTab.createdAt = tab.createdAt;\n          return updatedTab;\n        }\n        return tab;\n      })\n    );\n  }, []);\n\n  const closeTab = useCallback((tabId: string, paymentMethod: string) => {\n    const tabToClose = tabs.find(t => t.id === tabId);\n    if (tabToClose && tabToClose.status === 'open') {\n      addTransaction({\n        items: tabToClose.items,\n        totalAmount: tabToClose.totalAmount,\n        tabId: tabToClose.id,\n        paymentMethod: paymentMethod,\n      });\n      setTabs(prevTabs =>\n        prevTabs.map(tab =>\n          tab.id === tabId ? { ...tab, status: 'paid' } : tab\n        )\n      );\n    }\n  }, [tabs, addTransaction]);\n  \n  const getTabById = useCallback((tabId: string) => {\n    return tabs.find(tab => tab.id === tabId);\n  }, [tabs]);\n\n  return (\n    <TabsContext.Provider value={{ tabs, addTab, addItemToTab, closeTab, getTabById }}>\n      {children}\n    </TabsContext.Provider>\n  );\n};\n\nexport const useTabs = (): TabsContextType => {\n  const context = useContext(TabsContext);\n  if (!context) {\n    throw new Error('useTabs must be used within a TabsProvider');\n  }\n  return context;\n};\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA,kOAA2C,0DAA0D;AALrG;;;;;AAeA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,MAAM,eAAwD,CAAC,EAAE,QAAQ,EAAE;IAChF,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IAClD,MAAM,EAAE,cAAc,EAAE,GAAG,CAAA,GAAA,gIAAA,CAAA,WAAQ,AAAD;IAElC,MAAM,SAAS,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QAC1B,MAAM,SAAS,IAAI,qHAAA,CAAA,sBAAmB,CAAC,CAAC,IAAI,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,SAAS,CAAC,GAAG,IAAI,EAAE;QAC1G,QAAQ,CAAA,WAAY;mBAAI;gBAAU;aAAO;QACzC,OAAO;IACT,GAAG,EAAE;IAEL,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC,OAAe,UAAoB;QACnE,QAAQ,CAAA,WACN,SAAS,GAAG,CAAC,CAAA;gBACX,IAAI,IAAI,EAAE,KAAK,SAAS,IAAI,MAAM,KAAK,QAAQ;oBAC7C,MAAM,oBAAoB,IAAI,KAAK,CAAC,SAAS,CAAC,CAAA,OAAQ,KAAK,QAAQ,CAAC,EAAE,KAAK,SAAS,EAAE;oBACtF,IAAI;oBACJ,IAAI,oBAAoB,CAAC,GAAG;wBAC1B,WAAW,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,QAC9B,UAAU,oBACN,IAAI,qHAAA,CAAA,oBAAiB,CAAC,UAAU,KAAK,QAAQ,GAAG,YAChD;oBAER,OAAO;wBACL,WAAW;+BAAI,IAAI,KAAK;4BAAE,IAAI,qHAAA,CAAA,oBAAiB,CAAC,UAAU;yBAAU;oBACtE;oBACA,uGAAuG;oBACvG,MAAM,aAAa,IAAI,qHAAA,CAAA,sBAAmB,CAAC,IAAI,EAAE,EAAE,IAAI,IAAI;oBAC3D,WAAW,KAAK,GAAG;oBACnB,WAAW,MAAM,GAAG,IAAI,MAAM;oBAC9B,WAAW,SAAS,GAAG,IAAI,SAAS;oBACpC,OAAO;gBACT;gBACA,OAAO;YACT;IAEJ,GAAG,EAAE;IAEL,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC,OAAe;QAC3C,MAAM,aAAa,KAAK,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QAC3C,IAAI,cAAc,WAAW,MAAM,KAAK,QAAQ;YAC9C,eAAe;gBACb,OAAO,WAAW,KAAK;gBACvB,aAAa,WAAW,WAAW;gBACnC,OAAO,WAAW,EAAE;gBACpB,eAAe;YACjB;YACA,QAAQ,CAAA,WACN,SAAS,GAAG,CAAC,CAAA,MACX,IAAI,EAAE,KAAK,QAAQ;wBAAE,GAAG,GAAG;wBAAE,QAAQ;oBAAO,IAAI;QAGtD;IACF,GAAG;QAAC;QAAM;KAAe;IAEzB,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QAC9B,OAAO,KAAK,IAAI,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK;IACrC,GAAG;QAAC;KAAK;IAET,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAQ;YAAc;YAAU;QAAW;kBAC7E;;;;;;AAGP;AAEO,MAAM,UAAU;IACrB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 1156, "column": 0}, "map": {"version":3,"sources":["file:///home/jose-lopes/pessoais/02-areas/resgatame/frontend/src/components/providers/AppProviders.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { MenuProvider } from '@/contexts/MenuContext';\nimport { SalesProvider } from '@/contexts/SalesContext';\nimport { AnnotationsProvider } from '@/contexts/AnnotationsContext';\nimport { CustomersProvider } from '@/contexts/CustomersContext';\nimport { TabsProvider } from '@/contexts/TabsContext';\nimport React from 'react';\n\nexport const AppProviders: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  return (\n    <CustomersProvider>\n      <MenuProvider>\n        <SalesProvider>\n          <AnnotationsProvider>\n            <TabsProvider>\n              {children}\n            </TabsProvider>\n          </AnnotationsProvider>\n        </SalesProvider>\n      </MenuProvider>\n    </CustomersProvider>\n  );\n};\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AANA;;;;;;;AASO,MAAM,eAAwD,CAAC,EAAE,QAAQ,EAAE;IAChF,qBACE,8OAAC,oIAAA,CAAA,oBAAiB;kBAChB,cAAA,8OAAC,+HAAA,CAAA,eAAY;sBACX,cAAA,8OAAC,gIAAA,CAAA,gBAAa;0BACZ,cAAA,8OAAC,sIAAA,CAAA,sBAAmB;8BAClB,cAAA,8OAAC,+HAAA,CAAA,eAAY;kCACV;;;;;;;;;;;;;;;;;;;;;;;;;;AAOf","debugId":null}}]
}